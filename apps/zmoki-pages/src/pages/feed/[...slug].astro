---
import { getCollection, type CollectionEntry } from "astro:content";
import PostLayout from "../../layouts/PostLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("feed");
  return posts.map((post: CollectionEntry<"feed">) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props as CollectionEntry<"feed">;
const { Content } = await post.render();

// Get all posts and sort by publish date
const allPosts = await getCollection("feed");
const sortedPosts = allPosts.sort(
  (a: CollectionEntry<"feed">, b: CollectionEntry<"feed">) =>
    new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime(),
);

// Find current post index
const currentIndex = sortedPosts.findIndex((p: CollectionEntry<"feed">) => p.slug === post.slug);

// Get previous and next posts
const prevPost = currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;
const nextPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;
---

<PostLayout
  title={post.data.title}
  description={post.data.description}
  publishDate={post.data.publishDate}
  contentModifiedDate={post.data.contentModifiedDate}
  prevPost={prevPost}
  nextPost={nextPost}
>
  <Content />
</PostLayout>
